{
  "swagger": "2.0",
  "info": { "version": "v1", "title": "DeptApps.Api.Public" },
  "host": "deptapps-api.deptagency.com",
  "basePath": "/Public",
  "schemes": ["https"],
  "paths": {
    "/api/v1/agencies": {
      "get": {
        "tags": ["Agencies"],
        "summary": "Get agencies",
        "description": "Get all agencies",
        "operationId": "Agencies_Corporations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Agencies returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[CorporationDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/agencies/{id}/divisions": {
      "get": {
        "tags": ["Agencies"],
        "summary": "Get agencies",
        "description": "Get all agencies",
        "operationId": "Agencies_Divisions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Agencies returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[DivisionDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/bookedhours/custom/{employeeId}": {
      "get": {
        "tags": ["BookedHours"],
        "summary": "Get booked hours for a date range",
        "description": "Description goes here!",
        "operationId": "BookedHours_GetByDateRange",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hoursType",
            "in": "query",
            "description": "allowed values [billable, nonbillable, null]",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.activityId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.activityName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.budgetId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.budgetIsDayBudget",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.budgetName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.budgetType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 10, 20, 30]
          },
          {
            "name": "searchParameters.calendarEndDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.calendarStartDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.color",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.companyId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.companyName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.corporationId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.corporationName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.costPrice",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.date",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.description",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.employeeDisplayName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.employeeLogin",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.hours",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.id",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.invoiceStatus",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 10, 20]
          },
          {
            "name": "searchParameters.modifyDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.modifyUserDisplayName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.modifyUserName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.projectId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.projectName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.projectType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.refId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.roleId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.roleName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.salesPrice",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.time",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.from",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.to",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.searchTerm",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.leadManagerId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.offset",
            "in": "query",
            "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.limit",
            "in": "query",
            "description": "Max number of items to retrieve.\r\nOptional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.sort",
            "in": "query",
            "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "searchParameters.fields",
            "in": "query",
            "description": "Select subset of fields to be returned.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Booked hours returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[BookedHoursDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/bookedhours/agency/{agencyId}": {
      "get": {
        "tags": ["BookedHours"],
        "summary": "Get booked hours for a specific date range",
        "operationId": "BookedHours_GetByDateRangeAndAgency",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "description": "id of an agency",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hoursType",
            "in": "query",
            "description": "allowed values [billable, nonbillable, null]",
            "required": false,
            "type": "string"
          },
          {
            "name": "divisionId",
            "in": "query",
            "description": "id of a division",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "employmentType",
            "in": "query",
            "description": "allowed values: dept, freelance, flex, empty",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.activityId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.activityName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.budgetId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.budgetIsDayBudget",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.budgetName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.budgetType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 10, 20, 30]
          },
          {
            "name": "searchParameters.calendarEndDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.calendarStartDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.color",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.companyId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.companyName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.corporationId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.corporationName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.costPrice",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.date",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.description",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.employeeDisplayName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.employeeLogin",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.hours",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.id",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.invoiceStatus",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 10, 20]
          },
          {
            "name": "searchParameters.modifyDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.modifyUserDisplayName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.modifyUserName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.projectId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.projectName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.projectType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.refId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.roleId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.roleName",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.salesPrice",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.time",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.from",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.to",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.searchTerm",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.leadManagerId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.offset",
            "in": "query",
            "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.limit",
            "in": "query",
            "description": "Max number of items to retrieve.\r\nOptional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.sort",
            "in": "query",
            "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "searchParameters.fields",
            "in": "query",
            "description": "Select subset of fields to be returned.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Booked hours returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[BookedHoursDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/bookedhours/{declarationId}": {
      "put": {
        "tags": ["BookedHours"],
        "summary": "Update booked hours",
        "description": "Put hour declaratio for employeeId",
        "operationId": "BookedHours_PutForEmployeeId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bookedHours",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/BookedHoursPublicDto" }
          },
          {
            "name": "declarationId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Hours are booked OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[BookedHoursDto]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "delete": {
        "tags": ["BookedHours"],
        "summary": "Delete booked hours",
        "operationId": "BookedHours_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "declarationId",
            "in": "path",
            "description": "declaration id",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseMessage[Boolean]" }
          }
        }
      }
    },
    "/api/v1/bookedhours": {
      "post": {
        "tags": ["BookedHours"],
        "summary": "Book new hour",
        "description": "New POST method",
        "operationId": "BookedHours_PostForEmployeeId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bookedHours",
            "in": "body",
            "description": "hour declaration object",
            "required": true,
            "schema": { "$ref": "#/definitions/BookedHoursPublicDto" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[BookedHoursDto]"
            }
          }
        }
      }
    },
    "/api/v1/bookedhours/bulk": {
      "post": {
        "tags": ["BookedHours"],
        "summary": "Book new hour",
        "description": "New POST method",
        "operationId": "BookedHours_PostBulkForEmployeeId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "bookedHours",
            "in": "body",
            "description": "hour declaration object",
            "required": true,
            "schema": { "$ref": "#/definitions/BookedHoursPublicDto" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[BookedHoursDto]"
            }
          }
        }
      }
    },
    "/api/v1/bookedhours/export/{employeeId}": {
      "get": {
        "tags": ["BookedHours"],
        "operationId": "BookedHours_GetHoursExport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/File" }
          }
        }
      }
    },
    "/api/v1/bookedhours/export": {
      "get": {
        "tags": ["BookedHours"],
        "operationId": "BookedHours_GetHoursExport",
        "consumes": [],
        "produces": ["application/json", "text/json"],
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/File" }
          }
        }
      }
    },
    "/api/v1/bookedhours/employees/{employeeId}": {
      "get": {
        "tags": ["BookedHours"],
        "summary": "Get booked hours for a date range",
        "description": "Description goes here!",
        "operationId": "BookedHours_GetEmployeeHourBookingByDateRange",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.dateFrom",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.dateTo",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Booked hours returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[EmployeeHourBookingDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/budgets/search": {
      "get": {
        "tags": ["Budgets"],
        "summary": "Search budgets",
        "description": "Description goes here!",
        "operationId": "Budgets_Search",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "corporationId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.searchTerm",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.active",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.eBudgetType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 10, 20, 30]
          },
          {
            "name": "searchParameters.companyNameShort",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.isDayBudget",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.modifyDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.name",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.purchaseAmount",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.spendHours",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.eBudgetStatus",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "searchParameters.subsequentCalculation",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.isProjectActive",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.eActivityLevel",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3]
          },
          {
            "name": "searchParameters.offset",
            "in": "query",
            "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.limit",
            "in": "query",
            "description": "Max number of items to retrieve.\r\nOptional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.sort",
            "in": "query",
            "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "searchParameters.fields",
            "in": "query",
            "description": "Select subset of fields to be returned.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Budgets returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[BudgetSearchResultDto]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/budgets/search/internal": {
      "get": {
        "tags": ["Budgets"],
        "summary": "Search internal budgets",
        "description": "Description goes here!",
        "operationId": "Budgets_SearchInternalBudgets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchParameters.searchTerm",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.active",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.eBudgetType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 10, 20, 30]
          },
          {
            "name": "searchParameters.companyNameShort",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.isDayBudget",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.modifyDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.name",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.purchaseAmount",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.spendHours",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.eBudgetStatus",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "searchParameters.subsequentCalculation",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.isProjectActive",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.eActivityLevel",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3]
          },
          {
            "name": "searchParameters.offset",
            "in": "query",
            "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.limit",
            "in": "query",
            "description": "Max number of items to retrieve.\r\nOptional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.sort",
            "in": "query",
            "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "searchParameters.fields",
            "in": "query",
            "description": "Select subset of fields to be returned.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Budgets returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[BudgetSearchResultDto]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/budgets/recent": {
      "get": {
        "tags": ["Budgets"],
        "summary": "Get recent budgets for current user",
        "description": "Shortlist of the recent budgets the user most likely will book",
        "operationId": "Budgets_GetRecentBudgetsForCurrentUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchParameters.searchTerm",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.active",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.eBudgetType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 10, 20, 30]
          },
          {
            "name": "searchParameters.companyNameShort",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.isDayBudget",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.modifyDate",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.name",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.purchaseAmount",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "searchParameters.spendHours",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.eBudgetStatus",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [0, 1, 2]
          },
          {
            "name": "searchParameters.subsequentCalculation",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.isProjectActive",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.eActivityLevel",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32",
            "enum": [1, 2, 3]
          },
          {
            "name": "searchParameters.offset",
            "in": "query",
            "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.limit",
            "in": "query",
            "description": "Max number of items to retrieve.\r\nOptional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.sort",
            "in": "query",
            "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "searchParameters.fields",
            "in": "query",
            "description": "Select subset of fields to be returned.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Budgets for current user returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[BudgetSearchResultDto]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/clients/{clientId}/projects": {
      "get": {
        "tags": ["Clients"],
        "summary": "Get client projects",
        "operationId": "Clients_GetProjects",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeService",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "searchParameters.corporationId",
            "in": "query",
            "description": "Optional. Default: null",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[List[ProjectDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/corporationsFeatures": {
      "get": {
        "tags": ["CorporationFeatures"],
        "summary": "Get allowed features for corporationId",
        "description": "Description goes here!",
        "operationId": "CorporationFeatures_GetCorporationFeatures",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchParameters.offset",
            "in": "query",
            "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.limit",
            "in": "query",
            "description": "Max number of items to retrieve.\r\nOptional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.sort",
            "in": "query",
            "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "searchParameters.fields",
            "in": "query",
            "description": "Select subset of fields to be returned.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Project returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[CorporationFeaturesDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/employees/currentUser": {
      "get": {
        "tags": ["Employees"],
        "summary": "Get logged in employee",
        "description": "Description goes here!!",
        "operationId": "Employees_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[LoggedInUserDto]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/employees/{employeeId}/netutilization": {
      "get": {
        "tags": ["Employees"],
        "summary": "Get employee's net utilization",
        "description": "Description goes here!",
        "operationId": "Employees_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "date",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Employee's tasks returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[EmployeeNetUtilizationDto]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/employees/search": {
      "get": {
        "tags": ["Employees"],
        "summary": "Get employees",
        "description": "Description goes here!",
        "operationId": "Employees_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          { "name": "q", "in": "query", "required": true, "type": "string" },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Employees returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[BasicEmployeeDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/employees/{employeeId}/agencies": {
      "get": {
        "tags": ["Employees"],
        "summary": "Get agencies",
        "description": "Get all agencies",
        "operationId": "Employees_Corporations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Agencies returned OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[CorporationDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/employeesettings": {
      "get": {
        "tags": ["EmployeeSettings"],
        "operationId": "EmployeeSettings_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[EmployeeSettingsDto]"
            }
          }
        }
      },
      "put": {
        "tags": ["EmployeeSettings"],
        "operationId": "EmployeeSettings_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeSettings",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeSettingsUpdateDto" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[EmployeeSettingsDto]"
            }
          }
        }
      }
    },
    "/api/v1/employee_upsert": {
      "post": {
        "tags": ["EmployeeUpsert"],
        "summary": "Upsert an employee from a Boomi request",
        "operationId": "EmployeeUpsert_Upsert",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/EmployeeUpsertRequestDto" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/EmployeeUpsertResponseDto" }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/v1/employee_offboard/{employeeId}": {
      "post": {
        "tags": ["EmployeeUpsert"],
        "operationId": "EmployeeUpsert_OffBoard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": { "description": "OK", "schema": { "type": "object" } },
          "204": { "description": "NoContent" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "InternalServerError" }
        }
      }
    },
    "/api/v1/illReports/currentUser": {
      "put": {
        "tags": ["IllReports"],
        "summary": "Post tammo's end of ill report",
        "description": "Description goes here!",
        "operationId": "IllReports_Put",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tammo's report returned OK",
            "schema": { "$ref": "#/definitions/ResponseMessage[IllReportDto]" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      },
      "post": {
        "tags": ["IllReports"],
        "summary": "Post an ill report",
        "description": "Description goes here!",
        "operationId": "IllReports_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Tammo's ill report returned OK",
            "schema": { "$ref": "#/definitions/ResponseMessage[IllReportDto]" }
          },
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/news/latest": {
      "get": {
        "tags": ["News"],
        "summary": "Gets the latest news informations about Dept",
        "operationId": "News_GetLatestNews",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseMessage[NewsDto]" }
          },
          "401": { "description": "Unauthorized" },
          "500": { "description": "InternalServerError" }
        }
      }
    },
    "/api/v1/inventory/offices": {
      "get": {
        "tags": ["OfficeLocations"],
        "operationId": "OfficeLocations_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchParameters.id",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.name",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.corporationId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.zipcode",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.timezoneId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.baseUtcOffset",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.offset",
            "in": "query",
            "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.limit",
            "in": "query",
            "description": "Max number of items to retrieve.\r\nOptional.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.sort",
            "in": "query",
            "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "searchParameters.fields",
            "in": "query",
            "description": "Select subset of fields to be returned.\r\nOptional.",
            "required": false,
            "type": "array",
            "items": { "type": "string" },
            "collectionFormat": "multi"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[OfficeLocationDto]]"
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/budgets": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get project budgets",
        "operationId": "Projects_GetProjects",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "corporationId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "activityLevel",
            "in": "query",
            "description": "1-Low, 2-Medium, 3-High",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "isForSchedule",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[List[BudgetDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/projecttasks": {
      "get": {
        "tags": ["ProjectTasks"],
        "summary": "Get project tasks",
        "operationId": "ProjectTasks_GetByProjectIdAndSelectedTaskId",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "projectTaskSearchParameters.projectId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "projectTaskSearchParameters.selectedTaskId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[List[ProjectTaskDto]]"
            }
          },
          "400": { "description": "Bad request" },
          "401": { "description": "Unauthorized" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/reports/hours/custom": {
      "get": {
        "tags": ["Report"],
        "summary": "Get custom date range hours net utilization",
        "description": "Description goes here!",
        "operationId": "Report_GetCustomHoursNetUtilization",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "searchParameters.agencyId",
            "in": "query",
            "description": "Required",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.divisionId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.employmentType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.hoursType",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.searchTerm",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string"
          },
          {
            "name": "searchParameters.leadManagerId",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParameters.dateFrom",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "searchParameters.dateTo",
            "in": "query",
            "description": "Optional",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": { "description": "Bad request" },
          "500": { "description": "Internal Server Error" }
        }
      }
    },
    "/api/v1/opportunities_upsert": {
      "post": {
        "tags": ["SalesforceOpportunites"],
        "summary": "Upsert an array of Salesforce opportunities",
        "operationId": "SalesforceOpportunites_Upsert",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/OpportunityUpsertRequestDto" }
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/OpportunitiesUpsertResponseDto" }
          },
          "401": { "description": "Unauthorized" }
        }
      }
    },
    "/api/v1/schedules": {
      "get": {
        "tags": ["Schedules"],
        "summary": "Get schedules for current user",
        "operationId": "Schedules_GetForCurrentUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[ScheduleDto]]"
            }
          }
        }
      }
    },
    "/api/v1/schedules/{employeeId}": {
      "get": {
        "tags": ["Schedules"],
        "summary": "Get schedules for employee",
        "operationId": "Schedules_GetForEmployee",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "in": "query",
            "description": "",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseMessage[IEnumerable[ScheduleDto]]"
            }
          }
        }
      }
    },
    "/api/v1/schedules/{scheduleId}": {
      "delete": {
        "tags": ["Schedules"],
        "summary": "Set Schedule as booked for current user",
        "operationId": "Schedules_DeleteForCurrentUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseMessage[Boolean]" }
          }
        }
      }
    },
    "/api/v1/schedules/{scheduleId}/{employeeId}": {
      "delete": {
        "tags": ["Schedules"],
        "summary": "Set Schedule as booked for employee",
        "operationId": "Schedules_DeleteForEmployee",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "employeeId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/ResponseMessage[Boolean]" }
          }
        }
      }
    },
    "/api/v1/timeoff": {
      "post": {
        "tags": ["TimeOff"],
        "summary": "Delete internal activities added with Boomi",
        "operationId": "TimeOff_Upsert",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/TimeOffUpsertRequestDto" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeOffResponseDto" }
          },
          "401": { "description": "Unauthorized" }
        }
      },
      "delete": {
        "tags": ["TimeOff"],
        "summary": "Delete internal activities added with Boomi",
        "operationId": "TimeOff_Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/DeleteTimeOffDto" }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Application's access token for Public API",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": { "$ref": "#/definitions/TimeOffResponseDto" }
          }
        }
      }
    },
    "/api/token": {
      "post": {
        "tags": ["_Authentication"],
        "summary": "Get OAuth token",
        "description": "Get OAuth authentication token for use with other endpoints. \r\n                                    Making a call with grant_type=password using username and password for the employee \r\n                                    (client_id and client_secret are mandatory as well) an access token and a refresh token will be received. \r\n                                    If access token expired, a new one can be received by making a new call with grant_type=refresh_token and the \r\n                                    refresh_token without sending username and password again. The refresh_token will be regenerated as well.\r\n                                    Optionally use grant_type=google and provide base64 encoded google_id_token returned from Google SignIn \r\n                                    (employee has to authorize, with Google, access to his/hers email).",
        "consumes": ["application/x-www-form-urlencoded"],
        "parameters": [
          {
            "name": "grant_type",
            "in": "formData",
            "description": "[password], [refresh_token], [google], and [api_key] are the supported grant types",
            "required": true,
            "type": "string",
            "default": "password"
          },
          {
            "name": "username",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Optional on QA, mandatory on deploy",
            "required": false,
            "type": "string"
          },
          {
            "name": "client_id",
            "in": "formData",
            "required": true,
            "type": "integer"
          },
          {
            "name": "client_secret",
            "in": "formData",
            "required": true,
            "type": "string"
          },
          {
            "name": "refresh_token",
            "in": "formData",
            "required": false,
            "type": "string"
          },
          {
            "name": "google_id_token",
            "in": "formData",
            "required": false,
            "type": "string"
          }
        ]
      }
    }
  },
  "definitions": {
    "ResponseMessage[IEnumerable[CorporationDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/CorporationDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "CorporationDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "nameShort": { "type": "string" },
        "businessTeamId": { "format": "int32", "type": "integer" },
        "businessTeam": { "type": "string" },
        "countryISOCode": { "type": "string" },
        "country": { "type": "string" },
        "regionId": { "format": "int32", "type": "integer" },
        "region": { "type": "string" }
      }
    },
    "ResponseMessage[IEnumerable[DivisionDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/DivisionDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "DivisionDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "description": { "type": "string" }
      }
    },
    "BookedHoursSearchParameters": {
      "type": "object",
      "properties": {
        "activityId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "activityName": { "description": "Optional", "type": "string" },
        "budgetId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "budgetIsDayBudget": { "description": "Optional", "type": "boolean" },
        "budgetName": { "description": "Optional", "type": "string" },
        "budgetType": {
          "format": "int32",
          "description": "Optional",
          "enum": [0, 10, 20, 30],
          "type": "integer"
        },
        "calendarEndDate": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "calendarStartDate": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "color": { "description": "Optional", "type": "string" },
        "companyId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "companyName": { "description": "Optional", "type": "string" },
        "corporationId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "corporationName": { "description": "Optional", "type": "string" },
        "costPrice": {
          "format": "double",
          "description": "Optional",
          "type": "number"
        },
        "date": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "description": { "description": "Optional", "type": "string" },
        "employeeDisplayName": { "description": "Optional", "type": "string" },
        "employeeLogin": { "description": "Optional", "type": "string" },
        "hours": {
          "format": "double",
          "description": "Optional",
          "type": "number"
        },
        "id": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "invoiceStatus": {
          "format": "int32",
          "description": "Optional",
          "enum": [0, 10, 20],
          "type": "integer"
        },
        "modifyDate": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "modifyUserDisplayName": {
          "description": "Optional",
          "type": "string"
        },
        "modifyUserName": { "description": "Optional", "type": "string" },
        "projectId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "projectName": { "description": "Optional", "type": "string" },
        "projectType": { "description": "Optional", "type": "string" },
        "refId": { "description": "Optional", "type": "string" },
        "roleId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "roleName": { "description": "Optional", "type": "string" },
        "salesPrice": {
          "format": "double",
          "description": "Optional",
          "type": "number"
        },
        "time": { "description": "Optional", "type": "string" },
        "from": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "to": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "searchTerm": { "description": "Optional", "type": "string" },
        "leadManagerId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
          "type": "integer"
        },
        "limit": {
          "format": "int32",
          "description": "Max number of items to retrieve.\r\nOptional.",
          "type": "integer"
        },
        "sort": {
          "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
          "type": "array",
          "items": { "type": "string" }
        },
        "fields": {
          "description": "Select subset of fields to be returned.\r\nOptional.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ResponseMessage[IEnumerable[BookedHoursDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/BookedHoursDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "BookedHoursDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "activityId": { "format": "int32", "type": "integer" },
        "activityName": { "type": "string" },
        "budgetId": { "format": "int32", "type": "integer" },
        "budgetIsDayBudget": { "type": "boolean" },
        "budgetName": { "type": "string" },
        "budgetType": {
          "format": "int32",
          "enum": [0, 10, 20, 30],
          "type": "integer"
        },
        "calendarEndDate": { "format": "date-time", "type": "string" },
        "calendarStartDate": { "format": "date-time", "type": "string" },
        "color": { "type": "string" },
        "companyId": { "format": "int32", "type": "integer" },
        "companyName": { "type": "string" },
        "corporationId": { "format": "int32", "type": "integer" },
        "corporationName": { "type": "string" },
        "corporationNameShort": { "type": "string" },
        "costPrice": { "format": "double", "type": "number" },
        "date": { "format": "date-time", "type": "string" },
        "description": { "type": "string" },
        "employeeDisplayName": { "type": "string" },
        "employeeLogin": { "type": "string" },
        "hours": { "format": "double", "type": "number" },
        "invoiceStatus": {
          "format": "int32",
          "enum": [0, 10, 20],
          "type": "integer"
        },
        "modifyDate": { "format": "date-time", "type": "string" },
        "modifyUserDisplayName": { "type": "string" },
        "modifyUserName": { "type": "string" },
        "projectId": { "format": "int32", "type": "integer" },
        "projectName": { "type": "string" },
        "projectType": { "type": "string" },
        "refId": { "type": "string" },
        "roleId": { "format": "int32", "type": "integer" },
        "roleName": { "type": "string" },
        "salesPrice": { "format": "double", "type": "number" },
        "time": { "type": "string" },
        "isLocked": { "type": "boolean" },
        "serviceDeskTicketNumber": { "type": "string" },
        "serviceDeskTicketPriority": { "type": "string" },
        "canEdit": { "type": "boolean" },
        "hoursType": { "type": "string" },
        "budgetCorporationName": { "type": "string" },
        "isVacation": { "type": "boolean" },
        "projectTaskId": { "format": "int32", "type": "integer" },
        "budgetGroupName": { "type": "string" },
        "timeBookingTypeId": { "format": "int32", "type": "integer" },
        "budgetCorporationNameShort": { "type": "string" },
        "projectTaskName": { "type": "string" },
        "projectCategory": { "type": "string" },
        "employeeWorkingCorporationNameShort": { "type": "string" }
      }
    },
    "BookedHoursPublicDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "date": { "format": "date-time", "type": "string" },
        "activityId": { "format": "int32", "type": "integer" },
        "budgetId": { "format": "int32", "type": "integer" },
        "hours": { "format": "double", "type": "number" },
        "description": { "type": "string" },
        "serviceDeskTicketNumber": { "type": "string" },
        "serviceDeskTicketPriority": { "type": "string" },
        "projectTaskId": { "format": "int32", "type": "integer" },
        "employeeId": { "format": "int32", "type": "integer" },
        "dates": {
          "type": "array",
          "items": { "format": "date-time", "type": "string" }
        }
      }
    },
    "ResponseMessage[BookedHoursDto]": {
      "type": "object",
      "properties": {
        "result": { "$ref": "#/definitions/BookedHoursDto" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "ResponseMessage[Boolean]": {
      "type": "object",
      "properties": {
        "result": { "type": "boolean" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "File": { "type": "object", "properties": {} },
    "EmploeeHourBookingSearchParameters": {
      "type": "object",
      "properties": {
        "DateFrom": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "DateTo": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        }
      }
    },
    "ResponseMessage[IEnumerable[EmployeeHourBookingDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/EmployeeHourBookingDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "EmployeeHourBookingDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "budgetId": { "format": "int32", "type": "integer" },
        "budgetName": { "type": "string" },
        "budgetCorporation": { "type": "string" },
        "companyid": { "format": "int32", "type": "integer" },
        "companySalesForceId": { "type": "string" },
        "companyName": { "type": "string" },
        "date": { "format": "date-time", "type": "string" },
        "description": { "type": "string" },
        "employeeId": { "format": "int32", "type": "integer" },
        "hours": { "format": "double", "type": "number" },
        "isBilled": { "type": "boolean" },
        "isBillable": { "type": "boolean" },
        "modifyDate": { "format": "date-time", "type": "string" },
        "projectId": { "format": "int32", "type": "integer" },
        "projectName": { "type": "string" }
      }
    },
    "BudgetSearchParameters": {
      "type": "object",
      "properties": {
        "searchTerm": { "description": "Optional", "type": "string" },
        "active": { "description": "Optional", "type": "boolean" },
        "eBudgetType": {
          "format": "int32",
          "description": "Optional",
          "enum": [0, 10, 20, 30],
          "type": "integer"
        },
        "companyNameShort": { "description": "Optional", "type": "string" },
        "isDayBudget": { "description": "Optional", "type": "boolean" },
        "modifyDate": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "name": { "description": "Optional", "type": "string" },
        "purchaseAmount": {
          "format": "double",
          "description": "Optional",
          "type": "number"
        },
        "spendHours": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "eBudgetStatus": {
          "format": "int32",
          "description": "Optional",
          "enum": [0, 1, 2],
          "type": "integer"
        },
        "subsequentCalculation": {
          "description": "Optional",
          "type": "boolean"
        },
        "isProjectActive": { "description": "Optional", "type": "boolean" },
        "eActivityLevel": {
          "format": "int32",
          "description": "Optional",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "offset": {
          "format": "int32",
          "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
          "type": "integer"
        },
        "limit": {
          "format": "int32",
          "description": "Max number of items to retrieve.\r\nOptional.",
          "type": "integer"
        },
        "sort": {
          "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
          "type": "array",
          "items": { "type": "string" }
        },
        "fields": {
          "description": "Select subset of fields to be returned.\r\nOptional.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ResponseMessage[BudgetSearchResultDto]": {
      "type": "object",
      "properties": {
        "result": { "$ref": "#/definitions/BudgetSearchResultDto" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "BudgetSearchResultDto": {
      "type": "object",
      "properties": {
        "clients": {
          "type": "array",
          "items": { "$ref": "#/definitions/ClientDto" }
        },
        "projects": {
          "type": "array",
          "items": { "$ref": "#/definitions/ProjectDto" }
        },
        "budgets": {
          "type": "array",
          "items": { "$ref": "#/definitions/BudgetDto" }
        }
      }
    },
    "ClientDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "corporationShortName": { "type": "string" },
        "projects": {
          "type": "array",
          "items": { "$ref": "#/definitions/ProjectDto" }
        }
      }
    },
    "ProjectDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "clientId": { "format": "int32", "type": "integer" },
        "clientName": { "type": "string" },
        "budgets": {
          "type": "array",
          "items": { "$ref": "#/definitions/BudgetDto" }
        }
      }
    },
    "BudgetDto": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "budgetType": {
          "format": "int32",
          "enum": [0, 10, 20, 30],
          "type": "integer"
        },
        "companyId": { "format": "int32", "type": "integer" },
        "companyNameShort": { "type": "string" },
        "hours": { "format": "double", "type": "number" },
        "id": { "format": "int32", "type": "integer" },
        "modifyUserDisplayName": { "type": "string" },
        "modifyUserName": { "type": "string" },
        "notes": { "type": "string" },
        "projectId": { "format": "int32", "type": "integer" },
        "projectName": { "type": "string" },
        "spendHours": { "format": "double", "type": "number" },
        "hoursLeft": { "format": "double", "type": "number" },
        "activityId": { "format": "int32", "type": "integer" },
        "activityLevel": {
          "format": "int32",
          "enum": [1, 2, 3],
          "type": "integer"
        },
        "groupName": { "type": "string" },
        "corporationId": { "format": "int32", "type": "integer" },
        "corporationShortName": { "type": "string" },
        "startDate": { "format": "date-time", "type": "string" },
        "endDate": { "format": "date-time", "type": "string" },
        "childBudgets": {
          "type": "array",
          "items": { "$ref": "#/definitions/BudgetDto" }
        },
        "isProjectTaskMandatory": { "type": "boolean" }
      }
    },
    "ClientProjectsSearchParameters": {
      "type": "object",
      "properties": {
        "corporationId": {
          "format": "int32",
          "description": "Optional. Default: null",
          "type": "integer"
        }
      }
    },
    "ResponseMessage[List[ProjectDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ProjectDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "CorporationFeaturesSearchParameters": {
      "type": "object",
      "properties": {
        "offset": {
          "format": "int32",
          "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
          "type": "integer"
        },
        "limit": {
          "format": "int32",
          "description": "Max number of items to retrieve.\r\nOptional.",
          "type": "integer"
        },
        "sort": {
          "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
          "type": "array",
          "items": { "type": "string" }
        },
        "fields": {
          "description": "Select subset of fields to be returned.\r\nOptional.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ResponseMessage[IEnumerable[CorporationFeaturesDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/CorporationFeaturesDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "CorporationFeaturesDto": {
      "type": "object",
      "properties": {
        "featureId": { "format": "int32", "type": "integer" },
        "featureName": { "type": "string" }
      }
    },
    "ResponseMessage[LoggedInUserDto]": {
      "type": "object",
      "properties": {
        "result": { "$ref": "#/definitions/LoggedInUserDto" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "LoggedInUserDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "displayName": { "type": "string" },
        "emailAddress": { "type": "string" },
        "firstName": { "type": "string" },
        "infix": { "type": "string" },
        "isActive": { "type": "boolean" },
        "isMale": { "type": "boolean" },
        "lastName": { "type": "string" },
        "loginName": { "type": "string" },
        "mobilePhoneNumber": { "type": "string" },
        "phoneNumber": { "type": "string" },
        "unitId": { "format": "int32", "type": "integer" },
        "unitName": { "type": "string" },
        "contactInfo": { "$ref": "#/definitions/IContactInfo" },
        "corporation": { "type": "string" },
        "corporationId": { "format": "int32", "type": "integer" },
        "corporationCountryISOCode": { "type": "string" },
        "floatId": { "type": "string" },
        "profilePicture": { "type": "string" },
        "employeeFunction": { "type": "string" },
        "isIll": { "type": "boolean" },
        "vacationHoursTotal": { "format": "double", "type": "number" },
        "vacationHoursLeft": { "format": "double", "type": "number" },
        "netUtilization": { "format": "double", "type": "number" },
        "socialMedia": {
          "type": "array",
          "items": { "$ref": "#/definitions/TammoSocialDto" }
        },
        "targetBillabilityOfEmployee": { "format": "double", "type": "number" },
        "isExternal": { "type": "boolean" },
        "skills": {
          "type": "array",
          "items": { "$ref": "#/definitions/EmployeeSkillDto" }
        },
        "homeZipCode": { "type": "string" },
        "allowBookingForFrozenCorporations": { "type": "boolean" },
        "allowAccessToProjectRelatedData": { "type": "boolean" },
        "allowExternalAccessToReportsPage": { "type": "boolean" }
      }
    },
    "IContactInfo": {
      "type": "object",
      "properties": {
        "Email": { "type": "string" },
        "PhoneNumber": { "type": "string" }
      }
    },
    "TammoSocialDto": {
      "type": "object",
      "properties": {
        "socialId": { "format": "int32", "type": "integer" },
        "socialName": { "type": "string" },
        "socialLink": { "type": "string" }
      }
    },
    "EmployeeSkillDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "category": { "type": "string" },
        "type": { "type": "string" },
        "level": { "format": "int32", "type": "integer" }
      }
    },
    "ResponseMessage[EmployeeNetUtilizationDto]": {
      "type": "object",
      "properties": {
        "result": { "$ref": "#/definitions/EmployeeNetUtilizationDto" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "EmployeeNetUtilizationDto": {
      "type": "object",
      "properties": {
        "netUtilization": { "format": "double", "type": "number" }
      }
    },
    "ResponseMessage[IEnumerable[BasicEmployeeDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/BasicEmployeeDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "BasicEmployeeDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "displayName": { "type": "string" },
        "function": { "type": "string" }
      }
    },
    "ResponseMessage[EmployeeSettingsDto]": {
      "type": "object",
      "properties": {
        "result": { "$ref": "#/definitions/EmployeeSettingsDto" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "EmployeeSettingsDto": {
      "type": "object",
      "properties": {
        "employeeId": { "format": "int32", "type": "integer" },
        "culture": { "type": "string" },
        "hourBookingShowWeekends": { "type": "boolean" },
        "corporationLocationId": { "format": "int32", "type": "integer" },
        "defaultActivityId": { "format": "int32", "type": "integer" }
      }
    },
    "EmployeeSettingsUpdateDto": {
      "type": "object",
      "properties": {
        "culture": { "type": "string" },
        "hourBookingShowWeekends": { "type": "boolean" },
        "corporationLocationId": { "format": "int32", "type": "integer" },
        "defaultActivityId": { "format": "int32", "type": "integer" }
      }
    },
    "EmployeeUpsertRequestDto": {
      "required": [
        "Employee",
        "EmploymentContract",
        "Department",
        "EmployingCorporationCode",
        "TermsOfEmployment",
        "Location"
      ],
      "type": "object",
      "properties": {
        "Employee": { "$ref": "#/definitions/EmployeeUpsertRequest" },
        "EmploymentContract": {
          "$ref": "#/definitions/EmploymentContractUpsertRequest"
        },
        "Department": { "$ref": "#/definitions/DepartmentUpsertRequest" },
        "EmployingCorporationCode": { "type": "string" },
        "WorkingCorporationCode": { "type": "string" },
        "DepartmentHistory": {
          "type": "array",
          "items": { "$ref": "#/definitions/DepartmentHistoryRequest" }
        },
        "WorkingCorporationHistory": {
          "type": "array",
          "items": { "$ref": "#/definitions/WorkingCorporationHistoryRequest" }
        },
        "TermsOfEmployment": {
          "$ref": "#/definitions/TermsOfEmploymentUpsertRequest"
        },
        "Location": { "$ref": "#/definitions/LocationUpsertRequest" }
      }
    },
    "EmployeeUpsertRequest": {
      "required": [
        "Id",
        "FirstName",
        "LastName",
        "EmailAddress",
        "PrivateEmailAddress"
      ],
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "FirstName": { "type": "string" },
        "LastName": { "type": "string" },
        "PhoneWork": { "format": "int64", "type": "integer" },
        "EmailAddress": { "type": "string" },
        "ReportsToId": { "format": "int32", "type": "integer" },
        "PrivateEmailAddress": { "type": "string" }
      }
    },
    "EmploymentContractUpsertRequest": {
      "required": ["DateStart", "Type"],
      "type": "object",
      "properties": {
        "DateStart": { "format": "date-time", "type": "string" },
        "DateEnded": { "format": "date-time", "type": "string" },
        "Type": { "format": "int32", "type": "integer" }
      }
    },
    "DepartmentUpsertRequest": {
      "required": ["DepartmentId", "DepartmentName"],
      "type": "object",
      "properties": {
        "DepartmentId": { "type": "string" },
        "DepartmentName": { "type": "string" }
      }
    },
    "DepartmentHistoryRequest": {
      "required": [
        "TermId",
        "DateValidFrom",
        "DepartmentId",
        "DepartmentName",
        "CorporationCode"
      ],
      "type": "object",
      "properties": {
        "TermId": { "type": "string" },
        "DateValidFrom": { "format": "date-time", "type": "string" },
        "DepartmentId": { "type": "string" },
        "DepartmentName": { "type": "string" },
        "CorporationCode": { "type": "string" }
      }
    },
    "WorkingCorporationHistoryRequest": {
      "required": ["TermId", "DateValidFrom"],
      "type": "object",
      "properties": {
        "TermId": { "type": "string" },
        "DateValidFrom": { "format": "date-time", "type": "string" },
        "DateValidUntil": { "format": "date-time", "type": "string" },
        "CorporationCode": { "type": "string" }
      }
    },
    "TermsOfEmploymentUpsertRequest": {
      "required": ["DateActive"],
      "type": "object",
      "properties": {
        "DateActive": { "format": "date-time", "type": "string" },
        "FlexHourSalary": { "format": "double", "type": "number" },
        "SalaryIsoCurrency": { "type": "string" },
        "Function": { "type": "string" },
        "SeniorityLevel": { "type": "string" }
      }
    },
    "LocationUpsertRequest": {
      "required": ["LocationId", "LocationName"],
      "type": "object",
      "properties": {
        "LocationId": { "pattern": "^[0-9]+(?:_[0-9]+)$", "type": "string" },
        "LocationName": { "type": "string" }
      }
    },
    "EmployeeUpsertResponseDto": {
      "type": "object",
      "properties": {
        "HasError": { "format": "int32", "type": "integer", "readOnly": true },
        "Message": { "type": "string", "readOnly": true },
        "Id": { "format": "int32", "type": "integer", "readOnly": true }
      }
    },
    "ResponseMessage[IllReportDto]": {
      "type": "object",
      "properties": {
        "result": { "$ref": "#/definitions/IllReportDto" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "IllReportDto": {
      "type": "object",
      "properties": {
        "dateCreatedUtc": { "format": "date-time", "type": "string" },
        "dateEndUtc": { "format": "date-time", "type": "string" },
        "dateStartUtc": { "format": "date-time", "type": "string" },
        "employeeId": { "format": "int32", "type": "integer" },
        "id": { "format": "int32", "type": "integer" }
      }
    },
    "ResponseMessage[NewsDto]": {
      "type": "object",
      "properties": {
        "result": { "$ref": "#/definitions/NewsDto" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "NewsDto": {
      "type": "object",
      "properties": {
        "YouTubeVideo": { "$ref": "#/definitions/YouTubeVideoDto" },
        "SlackMessage": { "$ref": "#/definitions/SlackLatestAnnouncementDto" }
      }
    },
    "YouTubeVideoDto": {
      "type": "object",
      "properties": {
        "IsSuccess": { "type": "boolean" },
        "Url": { "type": "string" }
      }
    },
    "SlackLatestAnnouncementDto": {
      "type": "object",
      "properties": {
        "IsSuccess": { "type": "boolean" },
        "Message": { "type": "string" },
        "Timestamp": { "type": "string" }
      }
    },
    "OfficeLocationSarchParameters": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "name": { "description": "Optional", "type": "string" },
        "corporationId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "zipcode": { "description": "Optional", "type": "string" },
        "timezoneId": { "description": "Optional", "type": "string" },
        "baseUtcOffset": { "description": "Optional", "type": "string" },
        "offset": {
          "format": "int32",
          "description": "Set number of \"limits\" to skip.\r\nOptional. Only works if limit is set.",
          "type": "integer"
        },
        "limit": {
          "format": "int32",
          "description": "Max number of items to retrieve.\r\nOptional.",
          "type": "integer"
        },
        "sort": {
          "description": "Define sort order. Prefix '+' for ascending (default if omitted), '-' for descending. \r\nExample: '+name' ('name'), -date.\r\nOptional.",
          "type": "array",
          "items": { "type": "string" }
        },
        "fields": {
          "description": "Select subset of fields to be returned.\r\nOptional.",
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "ResponseMessage[IEnumerable[OfficeLocationDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/OfficeLocationDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "OfficeLocationDto": {
      "type": "object",
      "properties": {
        "id": { "format": "int32", "type": "integer" },
        "name": { "type": "string" },
        "corporationId": { "format": "int32", "type": "integer" },
        "zipcode": { "type": "string" },
        "timezoneId": { "type": "string" },
        "baseUtcOffset": { "type": "string" }
      }
    },
    "ResponseMessage[List[BudgetDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/BudgetDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "ProjectTaskSearchParameters": {
      "required": ["ProjectId"],
      "type": "object",
      "properties": {
        "ProjectId": { "format": "int32", "type": "integer" },
        "SelectedTaskId": { "format": "int32", "type": "integer" }
      }
    },
    "ResponseMessage[List[ProjectTaskDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ProjectTaskDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "ProjectTaskDto": {
      "type": "object",
      "properties": {
        "Active": { "type": "boolean" },
        "HasHourDeclarations": { "type": "boolean" },
        "Id": { "format": "int32", "type": "integer" },
        "Name": { "type": "string" }
      }
    },
    "ReportsHourNetUtilizationSearchParameters": {
      "type": "object",
      "properties": {
        "agencyId": {
          "format": "int32",
          "description": "Required",
          "type": "integer"
        },
        "divisionId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "employmentType": { "description": "Optional", "type": "string" },
        "hoursType": { "description": "Optional", "type": "string" },
        "searchTerm": { "description": "Optional", "type": "string" },
        "leadManagerId": {
          "format": "int32",
          "description": "Optional",
          "type": "integer"
        },
        "dateFrom": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        },
        "dateTo": {
          "format": "date-time",
          "description": "Optional",
          "type": "string"
        }
      }
    },
    "ResponseMessage[WeekNetUtilizationDto]": {
      "type": "object",
      "properties": {
        "result": { "$ref": "#/definitions/WeekNetUtilizationDto" },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "WeekNetUtilizationDto": {
      "type": "object",
      "properties": {
        "employeeId": { "format": "int32", "type": "integer" },
        "employeeDisplayName": { "type": "string" },
        "employeeFunction": { "type": "string" },
        "agencyId": { "format": "int32", "type": "integer" },
        "totalHoursBooked": { "format": "double", "type": "number" },
        "netUtilization": { "format": "double", "type": "number" },
        "reportsToId": { "format": "int32", "type": "integer" },
        "reportsToDisplayName": { "type": "string" }
      }
    },
    "OpportunityUpsertRequestDto": {
      "type": "object",
      "properties": {
        "Id": { "type": "string" },
        "Number": { "type": "string" },
        "Name": { "type": "string" },
        "BusinessTeam": { "type": "string" },
        "AccountId": { "type": "string" },
        "Link": { "type": "string" },
        "Stage": { "type": "string" },
        "Value": { "format": "double", "type": "number" },
        "EstimatedStartDate": { "format": "date-time", "type": "string" },
        "Recurrence": { "type": "string" },
        "FeeModel": { "type": "string" }
      }
    },
    "OpportunitiesUpsertResponseDto": {
      "type": "object",
      "properties": {
        "HasError": { "format": "int32", "type": "integer", "readOnly": true },
        "Message": { "type": "string", "readOnly": true },
        "ErrorIds": {
          "type": "array",
          "items": { "type": "string" },
          "readOnly": true
        }
      }
    },
    "ResponseMessage[IEnumerable[ScheduleDto]]": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": { "$ref": "#/definitions/ScheduleDto" }
        },
        "totalCount": { "format": "int32", "type": "integer" },
        "offset": { "format": "int32", "type": "integer" }
      }
    },
    "ScheduleDto": {
      "description": "Dto for Schedule",
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "date": { "type": "string" },
        "projectId": { "format": "int32", "type": "integer" },
        "projectName": { "type": "string" },
        "clientName": { "type": "string" },
        "bookedTimeInMinutes": { "format": "int32", "type": "integer" }
      }
    },
    "TimeOffUpsertRequestDto": {
      "required": ["EmployeeId", "BambooId", "Type", "HourBookings"],
      "type": "object",
      "properties": {
        "EmployeeId": { "format": "int32", "type": "integer" },
        "BambooId": { "format": "int32", "type": "integer" },
        "Type": { "format": "int32", "type": "integer" },
        "HourBookings": {
          "type": "array",
          "items": { "$ref": "#/definitions/TimeOffHourBookingRequest" }
        }
      }
    },
    "TimeOffHourBookingRequest": {
      "required": ["Date", "Hours"],
      "type": "object",
      "properties": {
        "Date": { "format": "date-time", "type": "string" },
        "Hours": { "format": "double", "type": "number" }
      }
    },
    "TimeOffResponseDto": {
      "type": "object",
      "properties": {
        "HasError": { "format": "int32", "type": "integer", "readOnly": true },
        "Message": { "type": "string", "readOnly": true },
        "EmployeeId": { "format": "int32", "type": "integer", "readOnly": true }
      }
    },
    "DeleteTimeOffDto": {
      "type": "object",
      "properties": {
        "EmployeeId": { "format": "int32", "type": "integer" },
        "BambooIds": {
          "type": "array",
          "items": { "format": "int32", "type": "integer" }
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "description": "API Key Authentication",
      "name": "apiKey",
      "in": "header"
    }
  }
}
